{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/tpFinal/final/projet_final/src/pages/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const cities = [\"Paris\", \"Montpellier\", \"Toulon\", \"Aix-en-Provence\", \"Metz\", \"Caen\", \"Marseille\", \"Bordeaux\", \"Grenoble\", \"Clermont-Ferrand\", \"Besançon\", \"Argenteuil\", \"Lyon\", \"Lille\", \"Dijon\", \"Brest\", \"Boulogne-Billancourt\", \"Montreuil\", \"Toulouse\", \"Rennes\", \"Nîmes\", \"Limoges\", \"Orléans\", \"Nancy\", \"Nice\", \"Reims\", \"Angers\", \"Tours\", \"Mulhouse\", \"Roubaix\", \"Nantes\", \"Le Havre\", \"Villeurbanne\", \"Amiens\", \"Rouen\", \"Tourcoing\", \"Strasbourg\", \"Saint-Étienne\", \"Le Mans\", \"Perpignan\", \"Saint-Denis\", \"Nanterre\"];\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        const cityWeatherPromises = cities.map(async city => {\n          const geoResponse = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${city}&language=fr&count=1`);\n          const {\n            latitude,\n            longitude\n          } = geoResponse.data.results[0];\n          const weatherResponse = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`);\n          return {\n            city,\n            temperature: weatherResponse.data.current_weather.temperature,\n            condition: weatherResponse.data.current_weather.weathercode\n          };\n        });\n        const weatherResults = await Promise.all(cityWeatherPromises);\n        setWeatherData(weatherResults);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données météo\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getWeather();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"M\\xE9t\\xE9o des grandes villes de France\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.weatherContainer,\n      children: weatherData.map((cityData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.cityWeather,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: cityData.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temp\\xE9rature : \", cityData.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition : \", cityData.condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"rBlukbKGc17fZDbgJ0yDKtB0+fk=\");\n_c = Weather;\nconst styles = {\n  weatherContainer: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gap: \"20px\",\n    marginTop: \"20px\"\n  },\n  cityWeather: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\"\n  }\n};\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Weather","_s","cities","weatherData","setWeatherData","loading","setLoading","getWeather","cityWeatherPromises","map","city","geoResponse","get","latitude","longitude","data","results","weatherResponse","temperature","current_weather","condition","weathercode","weatherResults","Promise","all","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","weatherContainer","cityData","index","cityWeather","_c","display","gridTemplateColumns","gap","marginTop","backgroundColor","borderRadius","padding","boxShadow","textAlign","$RefreshReg$"],"sources":["/Users/alexis/Desktop/tpFinal/final/projet_final/src/pages/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Weather = () => {\n  const cities = [\n    \"Paris\",\n    \"Montpellier\",\n    \"Toulon\",\n    \"Aix-en-Provence\",\n    \"Metz\",\n    \"Caen\",\n    \"Marseille\",\n    \"Bordeaux\",\n    \"Grenoble\",\n    \"Clermont-Ferrand\",\n    \"Besançon\",\n    \"Argenteuil\",\n    \"Lyon\",\n    \"Lille\",\n    \"Dijon\",\n    \"Brest\",\n    \"Boulogne-Billancourt\",\n    \"Montreuil\",\n    \"Toulouse\",\n    \"Rennes\",\n    \"Nîmes\",\n    \"Limoges\",\n    \"Orléans\",\n    \"Nancy\",\n    \"Nice\",\n    \"Reims\",\n    \"Angers\",\n    \"Tours\",\n    \"Mulhouse\",\n    \"Roubaix\",\n    \"Nantes\",\n    \"Le Havre\",\n    \"Villeurbanne\",\n    \"Amiens\",\n    \"Rouen\",\n    \"Tourcoing\",\n    \"Strasbourg\",\n    \"Saint-Étienne\",\n    \"Le Mans\",\n    \"Perpignan\",\n    \"Saint-Denis\",\n    \"Nanterre\",\n  ];\n\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        const cityWeatherPromises = cities.map(async (city) => {\n          const geoResponse = await axios.get(\n            `https://geocoding-api.open-meteo.com/v1/search?name=${city}&language=fr&count=1`\n          );\n          const { latitude, longitude } = geoResponse.data.results[0];\n\n          const weatherResponse = await axios.get(\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`\n          );\n\n          return {\n            city,\n            temperature: weatherResponse.data.current_weather.temperature,\n            condition: weatherResponse.data.current_weather.weathercode,\n          };\n        });\n\n        const weatherResults = await Promise.all(cityWeatherPromises);\n        setWeatherData(weatherResults);\n      } catch (error) {\n        console.error(\n          \"Erreur lors de la récupération des données météo\",\n          error\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getWeather();\n  }, []);\n\n  if (loading) return <div>Chargement...</div>;\n\n  return (\n    <div>\n      <h2>Météo des grandes villes de France</h2>\n      <div style={styles.weatherContainer}>\n        {weatherData.map((cityData, index) => (\n          <div key={index} style={styles.cityWeather}>\n            <h3>{cityData.city}</h3>\n            <p>Température : {cityData.temperature}°C</p>\n            <p>Condition : {cityData.condition}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  weatherContainer: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 1fr)\",\n    gap: \"20px\",\n    marginTop: \"20px\",\n  },\n  cityWeather: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"8px\",\n    padding: \"20px\",\n    boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\",\n  },\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}